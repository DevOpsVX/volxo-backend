from flask import Flask, request, jsonify
from flask_cors import CORS
from openai import OpenAI
import os

app = Flask(__name__)
FRONT_URL = "https://volxo-ad-insight.onrender.com"
CORS(app, resources={r"/api/*": {"origins": FRONT_URL}})

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

@app.post("/api/generate-report")
def generate_report():
    channels = request.form.get("channels", "")
    custom = request.form.get("customInstructions", "")
    files = request.files.getlist("files")

    file_names = [f.filename for f in files]

    # üî• Prompt atualizado
    prompt = f"""
    Voc√™ √© um analista de dados s√™nior, gestor de tr√°fego Meta Ads e Google Ads s√™nior,
    e tamb√©m um copywriter experiente.

    Sua fun√ß√£o √© gerar relat√≥rios de desempenho de campanhas de tr√°fego pago,
    escritos diretamente para o cliente final.  

    O relat√≥rio deve ser:
    - Claro, bem estruturado e de f√°cil entendimento
    - Profissional e estrat√©gico
    - Voltado para explicar os resultados, oportunidades e pr√≥ximos passos ao cliente
    - Sempre em tom positivo e confiante, mas sem dizer explicitamente que √© otimista

    Informa√ß√µes fornecidas:
    - Canais selecionados: {channels}
    - Instru√ß√µes adicionais: {custom}
    - Arquivos recebidos: {file_names}

    Estruture o relat√≥rio com:
    1. Resumo Executivo
    2. An√°lise de M√©tricas
    3. Cen√°rio Atual
    4. Oportunidades Identificadas
    5. Recomenda√ß√µes Estrat√©gicas
    6. Pr√≥ximos Passos
    """

    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7,
        max_tokens=1200
    )

    content = response.choices[0].message.content
    return jsonify({"content": content})
